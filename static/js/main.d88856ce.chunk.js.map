{"version":3,"sources":["components/SampleRouter.js","components/sideNavMenu/NestedTree.js","components/sideNavMenu/FlatTree.js","components/sideNavMenu/SideNavArea.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["SampleRouter","react_default","a","createElement","this","props","sampleData","React","Component","connect","state","NestedTree","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextTreeDepth","treeDepth","clickArrow","setState","expanded","arrow","onClick","className","depthStyle","marginLeft","showRoot","_this$props","treeData","parentExpanded","renderedTree","Array","isArray","push","style","name","children","forEach","child","length","renderNestedTree","dataName","FlatTree","orderTree","orderedTree","arguments","undefined","node","concat","toConsumableArray","id","_loop","toBeInserted","splice","i","insertIndex","findIndex","_orderedTree$i","apply","sortedData","find","currentNode","sorted","renderFlatTree","_assertThisInitialize","assertThisInitialized","SideNavArea","sideNavMenu_NestedTree","sideNavMenu_FlatTree","App","react_router_dom","sideNavMenu_SideNavArea","to","react_router","path","component","Boolean","window","location","hostname","match","initState","treeDataNested","treeDataFlat","rootReducer","type","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d88856ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass SampleRouter extends React.Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div>Content for SampleRouter</div>\r\n        <div>{this.props.sampleData}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    sampleData: state.sampleData\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(SampleRouter);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass NestedTree extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      expanded: true\r\n    }\r\n  }\r\n  nextTreeDepth = ()=> {\r\n    return this.props.treeDepth?this.props.treeDepth + 1: 1\r\n  }\r\n  clickArrow = () =>{\r\n    this.setState({expanded: !this.state.expanded})\r\n  }\r\n  arrow = () =>{\r\n    return this.state.expanded?\r\n      <span onClick={this.clickArrow} className= 'arrow'>&#9662;</span>:\r\n      <span onClick={this.clickArrow} className= 'arrow'>&#9656;</span>\r\n  }\r\n  depthStyle =() =>{\r\n    const i = () => this.props.showRoot?0:1\r\n    return {marginLeft: (this.nextTreeDepth()-1-i())*5 +'px'}\r\n  }  \r\n  renderNestedTree(){\r\n    const{treeData, parentExpanded, showRoot} = this.props\r\n    const{expanded} = this.state\r\n    const{arrow, nextTreeDepth, depthStyle} = this\r\n   \r\n    let renderedTree = []\r\n    if(Array.isArray(treeData)){\r\n      if(showRoot){\r\n        renderedTree.push(<div style={depthStyle()}>{arrow()}{treeData[0].name}</div>)} \r\n      treeData[0].children.forEach(child =>{\r\n        renderedTree.push(<NestedTree treeData ={child} treeDepth ={nextTreeDepth()} parentExpanded = {expanded} showRoot = {showRoot}/>)\r\n      })\r\n    }\r\n    else if(treeData.children.length > 0 && parentExpanded){\r\n      renderedTree.push(<div style={depthStyle()}>{arrow()}{treeData.name}</div>)\r\n      treeData.children.forEach(child =>{\r\n        renderedTree.push(<NestedTree treeData ={child} treeDepth ={nextTreeDepth()} parentExpanded = {expanded} showRoot = {showRoot}/>)\r\n      })\r\n    }\r\n    else if(treeData.children.length ===0 && parentExpanded){\r\n      renderedTree.push(<div style={depthStyle()}>&nbsp;&nbsp;&nbsp;{treeData.name}</div>)\r\n    }\r\n    else {return null}\r\n\r\n    return renderedTree\r\n  }  \r\n  render(){\r\n    return <div>{this.renderNestedTree()}</div>\r\n  }\r\n}\r\nconst mapStateToProps = (state, props) =>{\r\n  return{\r\n    treeData: state[props.dataName]\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(NestedTree)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nclass FlatTree extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      expanded: true\r\n    }\r\n  }\r\n  nextTreeDepth = ()=> {\r\n    return this.props.treeDepth?this.props.treeDepth + 1: 1\r\n  }\r\n  depthStyle =() =>{\r\n    let i =() => this.props.showRoot?0:1\r\n    return {marginLeft: (this.nextTreeDepth()-1-i())*12 +'px'}\r\n  }\r\n  orderTree = (orderedTree = []) =>{\r\n    this.props.treeData.forEach(node =>{\r\n      if(node.children.length !== 0){\r\n        orderedTree = [...orderedTree, [node.id].concat(node.children)]\r\n      }\r\n    })  \r\n    while(orderedTree.length > 1){      \r\n        let toBeInserted = orderedTree.splice(0,1)[0]      \r\n        for(let i = 0; i <= orderedTree.length-1; i++){\r\n          let insertIndex = orderedTree[i].findIndex(id => id === toBeInserted[0])\r\n          if(insertIndex !== -1){\r\n            orderedTree[i].splice(insertIndex,1,...toBeInserted)\r\n            break\r\n          }\r\n          if(insertIndex === -1 && i === orderedTree.length-1){\r\n            orderedTree = [...orderedTree, toBeInserted]\r\n            break\r\n          }\r\n        }\r\n    }    \r\n    let sortedData = []\r\n    orderedTree[0].forEach(id =>{\r\n      sortedData =[...sortedData, this.props.treeData.find(node => node.id === id)]\r\n    })\r\n    return <FlatTree treeData={sortedData} currentNode={sortedData[0]} parentExpanded={true} showRoot ={this.props.showRoot} sorted={true}/>\r\n  }\r\n  clickArrow = () =>{\r\n    this.setState({expanded: !this.state.expanded})\r\n  }\r\n  arrow = () =>{\r\n    return this.state.expanded?\r\n      <span onClick={this.clickArrow} className= 'arrow'>&#9662;</span>:\r\n      <span onClick={this.clickArrow} className= 'arrow'>&#9656;</span>\r\n  }\r\n\r\n  renderFlatTree = (renderedTree = []) =>{\r\n    const{sorted, treeData, currentNode, parentExpanded, showRoot} =this.props\r\n    const{expanded} = this.state\r\n    const{arrow, depthStyle, nextTreeDepth} = this\r\n    if(!sorted){\r\n      renderedTree.push(this.orderTree())\r\n    }\r\n    else if(currentNode.children.length > 0 && parentExpanded){\r\n      if(showRoot || currentNode !== treeData[0]){\r\n        renderedTree.push(<div style={depthStyle()}>{arrow()}{currentNode.name}</div>)\r\n      }      \r\n      currentNode.children.forEach(id=>{\r\n        renderedTree.push(<FlatTree treeData= {treeData} currentNode={treeData.find(node=>node.id === id)} parentExpanded = {expanded} treeDepth= {nextTreeDepth()} sorted={true} showRoot={this.props.showRoot}/>)\r\n      })\r\n    }\r\n    else if(currentNode.children.length === 0 && parentExpanded){\r\n      renderedTree.push(<div style={depthStyle()}>&nbsp;&nbsp;&nbsp;{currentNode.name}</div>)\r\n    }\r\n    return renderedTree    \r\n  }\r\n  render(){\r\n    return <div>{this.renderFlatTree()}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) =>{\r\n  return{\r\n    treeData: state[props.dataName]\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(FlatTree)\r\n","import React from 'react'\r\nimport '../../styles/App.css'\r\nimport NestedTree from './NestedTree'\r\nimport FlatTree from './FlatTree'\r\n\r\nclass SideNavArea extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div className = \"sideNav-Container\">\r\n        <div className = \"sideNav-One\">          \r\n          <b>Nested Tree Data</b>\r\n          <hr/>\r\n          <NestedTree dataName ='treeDataNested' showRoot = {true}/>\r\n        </div>\r\n        <div className = \"sideNav-Two\">        \r\n          <b>Flat Tree Data</b>\r\n          <hr/>\r\n          <FlatTree dataName = 'treeDataFlat' showRoot={false}/>\r\n        </div>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SideNavArea\r\n\r\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom'\nimport './styles/App.css'\nimport SampleRouter from './components/SampleRouter'\nimport SideNavArea from './components/sideNavMenu/SideNavArea'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <SideNavArea/>\n        <Link to = {'/SampleRouter'}>This is Link to the content</Link>\n        <Switch>\n          <Route path='/sampleRouter' component={SampleRouter}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  treeDataNested: [\r\n    {\r\n       id: 1,\r\n        name: \"A\",\r\n        children: [      \r\n          {\r\n            id: 2,\r\n            name: \"B\",\r\n            children: [\r\n              {\r\n                id: 3,\r\n                name: \"C\",\r\n                children: [\r\n                  {\r\n                    id: 4,\r\n                    name: \"D\",\r\n                    children: []\r\n                  },\r\n                  {\r\n                    id: 5,\r\n                    name: \"E\",\r\n                    children: []\r\n                  }\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            id: 6,\r\n            name: \"F\",\r\n            children: [\r\n              {\r\n                id: 7,\r\n                name: \"G\",\r\n                children: []\r\n              },\r\n              {\r\n                id: 8,\r\n                name: \"H\",\r\n                children: []\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: 9,\r\n            name: \"I\",\r\n            children: [\r\n              {\r\n                id: 10,\r\n                name: \"J\",\r\n                children: []\r\n              },\r\n              {\r\n                id: 11,\r\n                name: \"K\",\r\n                children: []\r\n              }\r\n            ]\r\n          }  \r\n        ]    \r\n    },\r\n  ],\r\n\r\n  treeDataFlat:[\r\n    {\r\n      id: 6,\r\n      name: \"F\",\r\n      children:[7,8]\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"G\",\r\n      children:[5]\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"H\",\r\n      children:[]\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"I\",\r\n      children:[10,11]\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"J\",\r\n      children:[]\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"K\",\r\n      children:[]\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"A\",\r\n      children:[2,6,9]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"B\",\r\n      children:[3]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"C\",\r\n      children:[4]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"D\",\r\n      children:[]\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"E\",\r\n      children:[]\r\n    }\r\n  ]\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"DO_NOTHING\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}